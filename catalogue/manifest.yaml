apiVersion: v1
kind: ConfigMap
metadata:
  name: catalogue
  namespace: roboshop
  labels:
    component: catalogue
    project: roboshop
    tier: app
data:
  MONGO: "true"
  MONGO_URL: "mongodb://mongodb:27017/catalogue"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  namespace: roboshop
  # deployment labels
  labels:
    component: catalogue
    project: roboshop
    tier: app
spec:
  replicas: 1
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: catalogue
      project: roboshop
      tier: app
  # This is pod definition
  template:
    metadata:
      labels:
        component: catalogue
        project: roboshop
        tier: app
    spec:
      containers:
      - name: catalogue
        image: johnson0309/catalogue:v1
        resources:
          requests:
            cpu: "50m"       #m stands for millicore. 1m = 1000 core #Soft Limit and we calculate it based on storage. ex: 2Gi for each pod then we should give maximum 60m core.
            memory: "128Mi"
          limits:
            cpu: "100m"
            memory: "256Mi"
        envFrom:
        - configMapRef:
            name: catalogue
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  namespace: roboshop
  labels:
    component: catalogue
    project: roboshop
    tier: app
spec:
  selector:
    component: catalogue
    project: roboshop
    tier: app
  ports:
  - protocol: TCP
    port: 8080 # service port
    targetPort: 8080 # container port
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: 
  name: catalogue
  namespace: roboshop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalogue  # It targets the catalogue deployment
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 10 # This is avg utilization of all the PODS usage. If it exceeds more than 10% then scaling happens
#HPA usually watches out the catalogue deployment. If the pods accross the deployment utilization more than 10% then it will create
# new pods using HPA auto scaling